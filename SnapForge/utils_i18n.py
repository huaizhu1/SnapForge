lang_dict = {
    "批量/单文件图片处理": "Batch/Single Image Processing",
    "图片信息查看": "Image Info",
    "图片去重": "Image Deduplication",
    "AI识别": "AI Recognition",
    "OCR/智能分类": "OCR/Smart Classification",
    "处理记录": "Processing History",
    "图片去背景": "Remove Background",
    "上传图片进行去背景": "Upload images for background removal",
    "开始去背景": "Start Background Removal",
    "⬇️ 下载全部去背景结果（zip包）": "⬇️ Download all background removal results (zip)",
    "上传图片文件": "Upload Image Files",
    "仅处理指定类型": "Filter by Type Only",
    "上传一个图片文件": "Upload a Single Image File",
    "处理模式": "Processing Mode",
    "批量处理（多文件上传）": "Batch (Multi-file)",
    "单文件处理": "Single File",
    "启用重命名": "Enable Renaming",
    "文件名前缀": "Filename Prefix",
    "起始编号": "Start Number",
    "启用格式转换": "Enable Format Conversion",
    "目标格式": "Target Format",
    "启用质量压缩": "Enable Compression",
    "压缩质量 (1-100)": "Compression Quality (1-100)",
    "💡 JPEG/WEBP用质量，PNG为压缩等级": "💡 JPEG/WEBP uses quality, PNG uses compression level",
    "启用尺寸调整": "Enable Resize",
    "目标宽度(px)": "Target Width (px)",
    "目标高度(px)": "Target Height (px)",
    "缩放模式": "Resize Mode",
    "等比缩放（fit）": "Fit",
    "拉伸填充（fill）": "Fill",
    "填充白边（pad）": "Pad",
    "中心裁剪（crop）": "Crop Center",
    "仅缩小不放大": "Only Shrink",
    "保留元数据 (EXIF)": "Keep Metadata (EXIF)",
    "启用批量水印": "Enable Watermark",
    "水印内容": "Watermark Text",
    "水印位置": "Watermark Position",
    "水印字号": "Watermark Font Size",
    "启用批量裁剪": "Enable Crop",
    "裁剪X": "Crop X",
    "裁剪Y": "Crop Y",
    "裁剪宽": "Crop Width",
    "裁剪高": "Crop Height",
    "批量旋转角度": "Rotate Angle",
    "批量滤镜": "Filter",
    "📂 上传图片 & 选择模式": "📂 Upload Images & Choose Mode",
    "🛠️ 图片处理参数": "🛠️ Image Processing Params",
    "重命名、格式转换与压缩": "File Rename/Format/Compression",
    "尺寸调整与高级选项": "Resize & Advanced Options",
    "📄 处理进度与结果": "📄 Progress & Results",
    "处理日志": "Processing Log",
    "正在处理": "Processing",
    "正在处理图片，请耐心等待...": "Processing images, please wait...",
    "❌ 未成功处理任何图片，请检查日志与参数。": "❌ No image processed successfully. Check log and params.",
    "⚠️ 有部分图片未处理成功：": "⚠️ Some images failed: ",
    "✅ 处理完成：": "✅ Done: ",
    "⬇️ 下载全部处理结果（zip包）": "⬇️ Download all results (zip)",
    "请上传图片并设置参数后，点击【开始处理图片】": "Please upload images and set parameters, then click [Start Processing]",
    "🚀 开始处理图片": "🚀 Start Processing",
    "请先上传图片文件！": "Please upload image files first!",
    "目标宽或高必须为正整数！": "Width and height must be positive!",
    "没有找到扩展名为": "No file with extension ",
    "的文件。": " found.",
    "处理过程中发生错误: ": "Error occurred during processing: ",
    "日志": "Log",
    "请上传图片查看信息": "Upload image to view info",
    "图片预览": "Preview",
    "尺寸": "Size",
    "模式": "Mode",
    "格式": "Format",
    "文件大小": "File Size",
    "DPI: ": "DPI: ",
    "EXIF详细信息": "EXIF Detail",
    "无EXIF元数据": "No EXIF metadata",
    "主色调:": "Main Color:",
    "色板:": "Palette:",
    "无法获取主色信息": "Failed to get color info",
    "RGB直方图": "RGB Histogram",
    "无法生成直方图": "Cannot plot histogram",
    "帧数": "Frames",
    "上传需去重的图片": "Upload images to deduplicate",
    "相似度阈值(越低越严格)": "Similarity Threshold (lower = stricter)",
    "开始去重": "Start Deduplication",
    "未检测到重复图片。": "No duplicates found.",
    "检测到 ": "Found ",
    " 组重复图片：": " groups of duplicates:",
    "请手动删除或下载需要保留/去除的图片。": "Please manually delete or download the images you want to keep/remove.",
    "AI识别 - 云端图片内容标签": "AI Recognition - Cloud Image Tagging",
    "上传图片进行AI识别": "Upload images for AI recognition",
    "选择AI识别服务": "Choose AI Service",
    "开始AI识别": "Start AI Recognition",
    "正在识别图片内容...": "Recognizing...",
    "识别标签：": "Tags:",
    "AI识别调用失败: ": "AI recognition failed: ",
    "批量OCR文字识别": "Batch OCR Text Recognition",
    "上传图片进行OCR": "Upload images for OCR",
    "开始OCR识别": "Start OCR Recognition",
    "识别结果": "Result",
    "智能图片分类（尺寸/主色调）": "Smart Image Classification (shape/color)",
    "上传图片进行智能分类": "Upload images for smart classification",
    "开始智能分类": "Start Classification",
    "分类结果:": "Classification:",
    "最近一次处理结果预览": "Recent Result Preview",
    "暂无最近处理结果": "No recent result",
}

def get_translator(lang):
    def _(text):
        if lang == "中文":
            return text
        return lang_dict.get(text, text)
    return _